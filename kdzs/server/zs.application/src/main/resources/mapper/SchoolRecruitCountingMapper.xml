<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sundeinfo.kd.zs.dao.SchoolRecruitCountingMapper">
  <resultMap id="BaseResultMap" type="com.sundeinfo.kd.zs.dao.model.SchoolRecruitCounting">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <constructor>
      <idArg column="seasonId" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="schoolId" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="recruitDate" javaType="java.util.Date" jdbcType="DATE" />
      <arg column="undergraduatePeople" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="technicalPeople" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="gkPeople" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="isdelete" javaType="java.lang.Boolean" jdbcType="BIT" />
      <arg column="createtime" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="createby" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="updatetime" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="updateby" javaType="java.lang.Integer" jdbcType="INTEGER" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    seasonId, schoolId, recruitDate, undergraduatePeople, technicalPeople, gkPeople, 
    isdelete, createtime, createby, updatetime, updateby
  </sql>
  <select id="selectByExample" parameterType="com.sundeinfo.kd.zs.dao.model.SchoolRecruitCountingExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from b_school_recruit_counting
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="com.sundeinfo.kd.zs.dao.model.SchoolRecruitCountingKey" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from b_school_recruit_counting
      <where>
        seasonId= #{seasonid,jdbcType=INTEGER}
        and schoolId = #{schoolid,jdbcType=INTEGER}
        and recruitDate = #{recruitdate,jdbcType=DATE}
      </where>
      order by createtime desc
  </select>










  <delete id="deleteByPrimaryKey" parameterType="com.sundeinfo.kd.zs.dao.model.SchoolRecruitCountingKey">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from b_school_recruit_counting
    where seasonId = #{seasonid,jdbcType=INTEGER}
      and schoolId = #{schoolid,jdbcType=INTEGER}
      and recruitDate = #{recruitdate,jdbcType=DATE}
  </delete>
  <delete id="deleteByExample" parameterType="com.sundeinfo.kd.zs.dao.model.SchoolRecruitCountingExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from b_school_recruit_counting
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sundeinfo.kd.zs.dao.model.SchoolRecruitCounting">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into b_school_recruit_counting (seasonId, schoolId, recruitDate, 
      undergraduatePeople, technicalPeople, gkPeople, 
      isdelete, createtime, createby, 
      updatetime, updateby)
    values (#{seasonid,jdbcType=INTEGER}, #{schoolid,jdbcType=INTEGER}, #{recruitdate,jdbcType=DATE}, 
      #{undergraduatepeople,jdbcType=INTEGER}, #{technicalpeople,jdbcType=INTEGER}, #{gkpeople,jdbcType=INTEGER}, 
      #{isdelete,jdbcType=BIT}, #{createtime,jdbcType=TIMESTAMP}, #{createby,jdbcType=INTEGER}, 
      #{updatetime,jdbcType=TIMESTAMP}, #{updateby,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.sundeinfo.kd.zs.dao.model.SchoolRecruitCounting">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into b_school_recruit_counting
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="seasonid != null">
        seasonId,
      </if>
      <if test="schoolid != null">
        schoolId,
      </if>
      <if test="recruitdate != null">
        recruitDate,
      </if>
      <if test="undergraduatepeople != null">
        undergraduatePeople,
      </if>
      <if test="technicalpeople != null">
        technicalPeople,
      </if>
      <if test="gkpeople != null">
        gkPeople,
      </if>
      <if test="isdelete != null">
        isdelete,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="createby != null">
        createby,
      </if>
      <if test="updatetime != null">
        updatetime,
      </if>
      <if test="updateby != null">
        updateby,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="seasonid != null">
        #{seasonid,jdbcType=INTEGER},
      </if>
      <if test="schoolid != null">
        #{schoolid,jdbcType=INTEGER},
      </if>
      <if test="recruitdate != null">
        #{recruitdate,jdbcType=DATE},
      </if>
      <if test="undergraduatepeople != null">
        #{undergraduatepeople,jdbcType=INTEGER},
      </if>
      <if test="technicalpeople != null">
        #{technicalpeople,jdbcType=INTEGER},
      </if>
      <if test="gkpeople != null">
        #{gkpeople,jdbcType=INTEGER},
      </if>
      <if test="isdelete != null">
        #{isdelete,jdbcType=BIT},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="createby != null">
        #{createby,jdbcType=INTEGER},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateby != null">
        #{updateby,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sundeinfo.kd.zs.dao.model.SchoolRecruitCountingExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from b_school_recruit_counting
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update b_school_recruit_counting
    <set>
      <if test="record.seasonid != null">
        seasonId = #{record.seasonid,jdbcType=INTEGER},
      </if>
      <if test="record.schoolid != null">
        schoolId = #{record.schoolid,jdbcType=INTEGER},
      </if>
      <if test="record.recruitdate != null">
        recruitDate = #{record.recruitdate,jdbcType=DATE},
      </if>
      <if test="record.undergraduatepeople != null">
        undergraduatePeople = #{record.undergraduatepeople,jdbcType=INTEGER},
      </if>
      <if test="record.technicalpeople != null">
        technicalPeople = #{record.technicalpeople,jdbcType=INTEGER},
      </if>
      <if test="record.gkpeople != null">
        gkPeople = #{record.gkpeople,jdbcType=INTEGER},
      </if>
      <if test="record.isdelete != null">
        isdelete = #{record.isdelete,jdbcType=BIT},
      </if>
      <if test="record.createtime != null">
        createtime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createby != null">
        createby = #{record.createby,jdbcType=INTEGER},
      </if>
      <if test="record.updatetime != null">
        updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateby != null">
        updateby = #{record.updateby,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update b_school_recruit_counting
    set seasonId = #{record.seasonid,jdbcType=INTEGER},
      schoolId = #{record.schoolid,jdbcType=INTEGER},
      recruitDate = #{record.recruitdate,jdbcType=DATE},
      undergraduatePeople = #{record.undergraduatepeople,jdbcType=INTEGER},
      technicalPeople = #{record.technicalpeople,jdbcType=INTEGER},
      gkPeople = #{record.gkpeople,jdbcType=INTEGER},
      isdelete = #{record.isdelete,jdbcType=BIT},
      createtime = #{record.createtime,jdbcType=TIMESTAMP},
      createby = #{record.createby,jdbcType=INTEGER},
      updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
      updateby = #{record.updateby,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sundeinfo.kd.zs.dao.model.SchoolRecruitCounting">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update b_school_recruit_counting
    <set>
      <if test="undergraduatepeople != null">
        undergraduatePeople =#{undergraduatepeople,jdbcType=INTEGER},
      </if>
      <if test="technicalpeople != null">
        technicalPeople =#{technicalpeople,jdbcType=INTEGER},
      </if>
      <if test="gkpeople != null">
        gkPeople =#{gkpeople,jdbcType=INTEGER},
      </if>
      <if test="isdelete != null">
        isdelete = #{isdelete,jdbcType=BIT},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="createby != null">
        createby = #{createby,jdbcType=INTEGER},
      </if>
      <if test="updatetime != null">
        updatetime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateby != null">
        updateby = #{updateby,jdbcType=INTEGER},
      </if>
    </set>
    where seasonId = #{seasonid,jdbcType=INTEGER}
      and schoolId = #{schoolid,jdbcType=INTEGER}
      and recruitDate = #{recruitdate,jdbcType=DATE}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sundeinfo.kd.zs.dao.model.SchoolRecruitCounting">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update b_school_recruit_counting
    set undergraduatePeople = #{undergraduatepeople,jdbcType=INTEGER},
      technicalPeople = #{technicalpeople,jdbcType=INTEGER},
      gkPeople = #{gkpeople,jdbcType=INTEGER},
      isdelete = #{isdelete,jdbcType=BIT},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      createby = #{createby,jdbcType=INTEGER},
      updatetime = #{updatetime,jdbcType=TIMESTAMP},
      updateby = #{updateby,jdbcType=INTEGER}
    where seasonId = #{seasonid,jdbcType=INTEGER}
      and schoolId = #{schoolid,jdbcType=INTEGER}
      and recruitDate = #{recruitdate,jdbcType=DATE}
  </update>
</mapper>