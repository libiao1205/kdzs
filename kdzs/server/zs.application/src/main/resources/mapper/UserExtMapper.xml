<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sundeinfo.kd.zs.dao.UserExtMapper">

  <resultMap id="BaseResultMap" type="com.sundeinfo.kd.zs.dto.sys.UserDTO">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="loginName" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="roleName" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="schoolName" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="schoolId" javaType="java.lang.Integer" jdbcType="INTEGER" />
    </constructor>
  </resultMap>

  <resultMap id="BaseResultMapOne" type="com.sundeinfo.kd.zs.dto.sys.UserDTO">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="loginName" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="roleId" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="schoolName" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="schoolId" javaType="java.lang.Integer" jdbcType="INTEGER" />
    </constructor>
  </resultMap>

  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select u.id,u.username loginName,u.name,r.name roleName,s.shortName schoolName,s.id schoolId from u_user u join u_user_role ur on u.id = ur.userId join u_role r on r.id = ur.roleId
    left join (b_school_teacher st join m_school s on st.schoolId = s.id) on u.id = st.userId
    where u.username like "%"#{key,jdbcType=VARCHAR}"%" or u.name like "%"#{key,jdbcType=VARCHAR}"%" or r.name like "%"#{key,jdbcType=VARCHAR}"%" or s.name like "%"#{key,jdbcType=VARCHAR}"%"
    group by u.id
  </select>

  <select id="selectByPrimaryKeyOne" parameterType="java.lang.Integer" resultMap="BaseResultMapOne">
    select u.id,u.username loginName,u.name,r.id roleId,s.shortName schoolName,s.id schoolId from u_user u join u_user_role ur on u.id = ur.userId join u_role r on r.id = ur.roleId
    left join (b_school_teacher st join m_school s on st.schoolId = s.id) on u.id = st.userId
    where u.id = #{id,jdbcType=INTEGER}
  </select>

  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" parameterType="com.sundeinfo.kd.zs.dao.model.User">
    insert into u_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="openid != null">
        openid,
      </if>
      <if test="unionid != null">
        unionid,
      </if>
      <if test="isdelete != null">
        isdelete,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="createby != null">
        createby,
      </if>
      <if test="updatetime != null">
        updatetime,
      </if>
      <if test="updateby != null">
        updateby,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="openid != null">
        #{openid,jdbcType=VARCHAR},
      </if>
      <if test="unionid != null">
        #{unionid,jdbcType=VARCHAR},
      </if>
      <if test="isdelete != null">
        #{isdelete,jdbcType=BIT},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="createby != null">
        #{createby,jdbcType=INTEGER},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateby != null">
        #{updateby,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>

</mapper>